\documentclass[10pt]{beamer}

% Handout Generation {{{

% \documentclass[10pt,handout]{beamer}
% \usepackage{pgfpages}
% \pgfpagesuselayout{4 on 1}[a4paper, landscape, border shrink=5mm]
% \pgfpageslogicalpageoptions{1}{border code=\pgfusepath{stroke}}
% \pgfpageslogicalpageoptions{2}{border code=\pgfusepath{stroke}}
% \pgfpageslogicalpageoptions{3}{border code=\pgfusepath{stroke}}
% \pgfpageslogicalpageoptions{4}{border code=\pgfusepath{stroke}}

% Packages {{{1

\usepackage{graphicx}
\usepackage{xcolor}
\usepackage{tikz}
\usetikzlibrary{shapes}
\usepackage{ifthen}
\usepackage{fontspec}
\usepackage{fontawesome}
\newfontfamily{\FA}{FontAwesome}

\definecolor{KTHBlue}{HTML}{003C9E}

% Theming {{{1
\usetheme[progressbar=foot]{metropolis}

\setbeamercolor{normal text}{%
  fg=black!90,
  bg=black!2
}
\setbeamercolor{alerted text}{%
  fg=KTHBlue!80,
  bg=black!2
}
\setbeamercolor{palette primary}{%
  use=normal text,
  fg=normal text.bg,
  bg=KTHBlue
}
\setbeamercolor{progress bar in head/foot}{fg=KTHBlue, bg=KTHBlue!10}
\setbeamercolor{progress bar in section page}{fg=KTHBlue, bg=KTHBlue!10}
\setbeamercolor{title separator}{fg=KTHBlue}

\AtBeginSubsection{\frame{\subsectionpage}}
% Title Page {{{1

\title{Demistify Coding: Best Practices \& Tools}
\subtitle{Towards painless programming for researchers}
\author{L. \textsc{Manzari} --- M. \textsc{Gaborit}}
\date{MWL Lunch Seminar -- June 1, 2016}
\institute{}
\titlegraphic{\hfill\includegraphics[height=1.5cm]{logo}}

% Icons {{{1

\def\githubicon{{\FA\symbol{"F09B}} }
\def\giticon{{\FA\symbol{"F1D3}} }
\def\foldericon{{\FA\symbol{"F07C}} }
\def\zipicon{{\FA\symbol{"F1C6}} }

% Graphics {{{1

\newcommand\fileimage[1]{%
  \draw[fill=black!2] (#1) -- ++(2,0) -- ++(0,2.5) -- ++(-1.5,0) -- ++(-.5,-.5) -- cycle;
}

\newcommand\researchpaper[1]{
  \fileimage{#1};
  \foreach \i in {1,...,17} {
    \draw (#1) ++(.1,.1*\i) -- ++(.8,0) ++(.2,0) -- ++(.8,0);
  }
  % title
  \draw[thick] (#1) ++(.3,2.1) -- ++(1.4,0);
  \draw[thick] (#1) ++(.5,2.0) -- ++(1,0);
}


% }}}
\begin{document}

% Title and TOC
\maketitle

\begin{frame}{Contents}
  \setbeamertemplate{section in toc}[sections numbered]
  \tableofcontents[hideallsubsections]
\end{frame}

\section{Best practices in coding: why?}

\begin{frame}{Best practices in coding: why?}

  \begin{quotation}
    Instead of imagining that our main task is to instruct a computer what
    to do, let us concentrate rather on explaining to human beings what we
    want a computer to do.
  \end{quotation}
  \begin{flushright}
    --- D. Knuth
  \end{flushright}

\end{frame}

\section{Editors \& IDEs}

\begin{frame}{Filetypes in research}

  \begin{center}
     \begin{tikzpicture}
      \foreach \type [count=\i] in {data,config,{\LaTeX{}},code}{
        \pause
        \fileimage{2.5*\i,0};
        \node (tmp) at (2.5*\i+1,-1) {\type};
        \node (tmp) at (2.5*\i+1,1) {\textbf{\texttt{.txt}} };
      }
    \end{tikzpicture}
    \pause{}

    \uncover<6,7>{
      \Large
      These are all \alert{text files}...
    }

    \uncover<7>{
      ...let's use \alert{a good text editor}!
    }
  \end{center}
\end{frame}

\begin{frame}{What makes a text editor \emph{good}?}
  \begin{quotation}
    A tool is but the extension of a man's hand, and a machine is but a complex tool.
  \end{quotation}
  \begin{flushright}
    --- Henry IV
  \end{flushright}
\end{frame}

\begin{frame}{A good text editor is...}

  \begin{description}[<+->]
  \item [Invisible!] focus is on the text
  \item [Helpful] e.g. suggests completions
  \item [Smart] understands your code
  \item [Yours!] different people like different things!
  \item [Extensible] via plugins
  \end{description}

  \\~\\

  \uncover<+->{
  \begin{block}{Plugins done right: the UNIX philosophy}
    A good plugin does only one thing, \alert{but it does it perfectly}.
  \end{block}
  }

\end{frame}

\begin{frame}{All the fuss about VIm and GNU Emacs}
\Large
  \begin{description}
  \item[Pros]
    \begin{itemize}
    \item learn once, use forever
    \item available everywhere
    \item (im)proved with time
    \end{itemize}
  \item[Cons]
    \begin{itemize}
    \item at the beginning, intimidating
    \end{itemize}
  \end{description}
\end{frame}

\begin{frame}[t]{Editors: VIm} % {{{2
  \only<1>{
    \begin{block}{What people think it is...}
      \begin{center}
        \includegraphics[width=.9\textwidth]{images/vim/people_think.png}
      \end{center}
    \end{block}
  }
  \only<2>{
    \begin{block}{What it does actually look like}
      \begin{center}
        \includegraphics[width=.9\textwidth]{images/vim/actual.png}
      \end{center}
    \end{block}
  }
  \only<3>{
    \begin{block}{Characteristics}
      \begin{itemize}
      \item Command line or GUI
      \item Modal (one mode per class of action: editing, movement, selection, etc...)
      \item Based on shortcuts and commands
      \item Fully customizable through plugin or embedded language
      \item Painless integration with any standard UNIX toolchain
      \end{itemize}
    \end{block}
    \begin{block}{Where to start}
      \begin{itemize}
      \item \url{http://vim-adventures.com/}
      \item \texttt{\$ vimtutor}
      \item \url{http://vimcasts.org/}
      \item \url{https://vimebook.com/en}
      \end{itemize}
    \end{block}
  }
\end{frame}

\begin{frame}[t]{Editors: GNU Emacs} % {{{2
  \begin{block}{Characteristics}
    \begin{itemize}[<+->]
    \item It's not a text editor, it's a Lisp interpreter!
      \begin{enumerate}[<+->]
      \item Everything Lisp can, GNU Emacs can
      \item Lisp is Turing-complete
      \item GNU Emacs can do \alert{everything}!
      \end{enumerate}
    \item Highly context-dependent behavior. This means:
      \begin{itemize}[<+->]
      \item live previews of formulas in .tex files
      \item direct evaluation of code snippets
      \item ...in general: get what you need, per-buffer
      \end{itemize}
    \end{itemize}
  \end{block}
  \uncover<+->{
  \begin{block}{How to get started}
    \begin{enumerate}[<+->]
    \item use it as a regular text editor!
    \item customize according to need
    \item extend it using packages
    \end{enumerate}
  \end{block}
  }
\end{frame}

\begin{frame}[t]{Editors: for the fainthearted} % {{{2
  \Large
  Multiplatform, open-source and actively maintained

  \\~\\

  \begin{itemize}
  \item \textbf{Atom} \hfill \url{atom.io}
  \item \textbf{Light Table} \hfill \url{lighttable.com}
  \item \textbf{Sublime Text} \hfill \url{sublimetext.com}
  \end{itemize}
\end{frame}
% }}}

\section{Versioning for fun and profit} % {{{1

\begin{frame}[t]{Contribution to a research code} % {{{2
  \begin{center}
    \begin{tikzpicture}[>=stealth, scale=.8, transform shape]
      % central node
      \node[KTHBlue] (researchcode) at (0,0) {\textbf{Research Code}};
      \draw[KTHBlue, line width=.5mm] (0,0) ellipse (1.7 and .7);

      % team
      \newcommand\teammember[1]{%
        \fill[black] (#1) -- ++(.3,0) .. controls ++(0,.15) and ++(.1,0) .. ++(-.15,.3) .. controls ++(-.1,0) and ++(0,.15) .. (#1);
        \fill[black] (#1) ++(.15,.37) circle (.07);
      }

      \foreach \x/\y in {-6/3, -4.5/3, -4/1.5, -5.5/1.5}{
        \teammember{\x,\y};
      }
      \draw[dashed, line width=.5mm] (-4.9,2.5) circle (1.7) node{Team};
      \draw[->, line width=.5mm] (-4.9,2.5) ++(-10:2) .. controls ++(.8,-.3) and ++(-.3,.6) ..  (160:1.6);

      % Publications
      \begin{scope}[xscale=-1]
        \draw[<-, line width=.5mm] (-4.9,-.6) ++(40:2.3) .. controls ++(.7,.4) and ++(-.4,.5) ..  (160:1.6);
      \end{scope}

      \foreach \j in {0,...,2} {
        \researchpaper{3.5+\j*.6,1.4-.4*\j};
      }
      \node (tmp) at (5,4.2) {Publications};


      % partners
      \begin{scope}[shift={(-3,0)}]
        \draw[thick] (-3,-5) -- ++(7,0) node[midway, below] {Academic \& Industrial Partners};
        \begin{scope}[shift={(2,1)}, rotate=70]
          \draw[<->, line width=.5mm] (-4.9,-.6) ++(40:2.3) .. controls ++(.7,.4) and ++(-.4,.5) ..  (160:1.6);
        \end{scope}

        % academic partner
        \draw[thick] (-2.5,-5) rectangle ++(2.2,2.8);
        \foreach \i in {0,...,3} {
          \foreach \j in {0,...,2} {
            \draw (-2.3+\j*.7,-4.3+\i*.5) rectangle ++(.4,.4);
          }
        }
        \draw (-2.3,-4.8) rectangle ++(.4,.4);
        \draw (-2.3+2*.7,-4.8) rectangle ++(.4,.4);
        \draw (-1.7,-5) rectangle ++(.3,.6);
        \draw (-1.4,-5) rectangle ++(.3,.6);

        % indus
        \draw[thick] (1,-5) --++(0,1.3)
        -- ++(.7,-.5) --++(0,.5)
        -- ++(.7,-.5) --++(0,.5)
        -- ++(.7,-.5) --++(0,1) --++(.5,0) -- ++(0,-1.8) -- cycle;
      \end{scope}

      % release

      \node (gh) at (4,-2) {\Huge\githubicon};
      \node (tmp) at (4,-3) {Public Release};
      \draw[->, line width=.5mm] (-20:1.6) .. controls ++(.8,0) and ++(-.6,.7) .. (3.6, -1.5);
    \end{tikzpicture}
  \end{center}
\end{frame}

% }}}
\begin{frame}{Versioning} % {{{2
  \begin{center}
    \only<+>{We need to \textbf{\alert{edit}} files every single day.}
    \only<+>{We need to \textbf{\alert{collaborate on}} files every single day.}
    \only<+>{We need to \textbf{\alert{review}} files every single day.}
    \only<+>{We need to \textbf{\alert{explore}} files every single day.}
    \only<+>{We need to \textbf{\alert{share}} files every single day.}

    \only<+>{\Large{We need a reliable versioning system!}}
  \end{center}
\end{frame}

% }}}

\subsection{The old way: name it, zip it, mail it, ...screw it} % {{{2

\begin{frame}{Versioning: the old way} % {{{3
  The first versioning attempts traditionally rely on 3 pillars:

  \begin{itemize}
  \item Naming conventions
  \item Regular backups
  \item Careful data management
  \end{itemize}

  {\alert{\Large{``C'mon, I even mailed myself the latest version: how can this go wrong?''}}}

\end{frame}

\begin{frame}{Versioning: the old way} % {{{3

  \begin{center}
    \begin{tikzpicture}[scale=1]
      \foreach [evaluate={\remainder=Mod(\i,2)}] \name/\icon [count=\i] in
      {Awesome\_project/\foldericon, Awesome\_project\_2/\foldericon,
        Awesome\_project\_backup/\zipicon, Awesome\_project\_test/\foldericon,
        Awesome\_project\_test\2/\foldericon, Awesome\_project\_backup\_2/\zipicon,
        Awesome\_project\_idea\_sunday/\foldericon, Awesome\_project\_publi/\foldericon,
        Awesome\_project\_publi\_fix/\foldericon, Awesome\_project\_not\_good/\foldericon,
        {...}/{~~~} } {
        \ifthenelse{\remainder=1}{
          \draw[black!8, fill=black!8] (0,-.5*\i) rectangle ++(9,.5);
        }{
          \draw[black!5, fill=black!5] (0,-.5*\i) rectangle ++(9,.5);
        }
        \node[anchor=west] (tmp) at (0,.2-.5*\i) {\icon~~\name};
        \pause{}
      }
    \end{tikzpicture}
  \end{center}
\end{frame}

\begin{frame}{Versioning: the old way} % {{{3

  Plus, this does not behave well when scaling things up...

  \begin{itemize}
  \item How to handle team-work?
  \item Modification conflicts: what to do?
  \item No continuous time travel
  \item ...and a lot more issues
  \end{itemize}

\end{frame}

\subsection{The new old way: \{Drop,\}box and ChangelogS} % {{{2

\begin{frame}{Versioning: the new old way} % {{{3
  The Cloud: one more step towards real-time collaboration!

  \begin{itemize}
  \item Free \& paid plans
  \item Auto-sync even for big files
  \item Team notifications
  \item Mobile access to files
  \item A carefully maintained changelog \emph{may} keep track of changes
  \end{itemize}
  \pause

  But...
  \pause
  does The Cloud really share the spirit that drives research?
\end{frame}

\begin{frame}{Terms of Service: Chosen moments} % {{{3

  \only<1>{
    \begin{quotation}
      These and other features may require our systems to \textbf{access, store and scan Your Stuff}.
      \begin{flushright}
        --- Dropbox TOS
      \end{flushright}
    \end{quotation}
  }
  \only<2>{
    \begin{quotation}
      You hereby grant Box and its contractors the right to \textbf{transmit, use and disclose
      Content posted on the Service} solely to the extent necessary to provide the Service,
      as otherwise permitted by these Terms, or to \textbf{comply with any request} of a
      governmental or regulatory body (including subpoenas or court orders)
      \begin{flushright}
        --- box TOS
      \end{flushright}
    \end{quotation}
  }
  \only<3>{
    What about iCloud ?

    \begin{quotation}
      Apple reserves the right at all times to determine whether Content is appropriate
      and in compliance with this Agreement, and may \textbf{pre-screen, move, refuse, modify
      and/or remove Content at any time, without prior notice and in its sole discretion}
      [\ldots]
      \begin{flushright}
        --- iCloud TOS
      \end{flushright}
    \end{quotation}

  }
  \only<4>{
    What about iCloud ?

    \begin{quotation}
      However, by submitting or posting such Content on areas of the Service that are
      accessible by the public or other users with whom you consent to share such Content,
      you grant Apple a worldwide, royalty-free, non-exclusive license to \textbf{use, distribute,
      reproduce, modify, adapt, publish, translate, publicly perform and publicly display
      such Content} on the Service solely for the purpose for which such Content was
      submitted or made available, without any compensation or obligation to you.
      \begin{flushright}
        --- iCloud TOS
      \end{flushright}
    \end{quotation}
  }

  \only<5>{
    \begin{quotation}
      When you upload, submit, store, send or receive content to or through our Services,
      you give Google (and those we work with) a worldwide license to \textbf{use, host, store,
      reproduce, modify, create derivative works, communicate, publish, publicly perform, publicly display and distribute
      such content}. [...] \textbf{{\color{red}This license continues even if you stop using our Services}} [...]
      \begin{flushright}
        --- Google TOS
      \end{flushright}
    \end{quotation}
  }
\end{frame}

\subsection{The badass way: \giticon} % {{{2

\begin{frame}{Versioning: the badass way} % {{{3

  \giticon was built to handle huge projects (i.e. the Linux kernel, \textasciitilde 12 million lines of code as of mid-2015!):

  \begin{itemize}
  \item distributed (everyone has a full copy)
  \item efficient (only changes are transferred)
  \item commit-wise versioning
  \item supporting branches (sandboxes for new ideas) and tagging
  \item potentially server-less \& self-hostable
  \item simultaneous modifications \& smart merging
  \item usable through GUI (tig, gitk, tortoise-git \& others) or command-line
  \end{itemize}

\end{frame}

\begin{frame}{Versioning: the badass way} % {{{3

  Concerning commits...

  \begin{center}
    \begin{tikzpicture}
      \draw[thick] (0,0) rectangle ++(4,6);

      \draw (0,5.5) -- ++(4,0);
      \node[anchor=west] (tmp) at (.2,5.75) {\scriptsize{18ab98fc...}};
      \draw (0,5) -- ++(4,0);
      \node[anchor=west] (tmp) at (.2,5.25) {\scriptsize{Deletes Harkonnens}};
      \draw (0,4.5) -- ++(4,0);
      \node[anchor=west] (tmp) at (.2,4.75) {\scriptsize{Leto Atreides <leto@atreides.ar>}};
      \draw (0,4) -- ++(4,0);
      \node[anchor=west] (tmp) at (.2,4.25) {\scriptsize{Dec. 25 2015 21:42:21}};
      \draw (0,2) -- ++(4,0);
      \foreach \sign/\col [count=\i] in { +/green, +/green, -/red, -/red, +/green, -/red, -/red} {
        \node[anchor=west, color=\col] (tmp) at (.2,2+.25*\i) {\scriptsize{\texttt{\sign}} };
      }
      \foreach \mode [count=\i] in { file doc.tex, new file mode 10644, file stuff.sh, old mode 100644,  new mode 100755 } {
        \node[anchor=west] (tmp) at (.2,2-.3*\i) {\scriptsize{\texttt{\mode}} };
      }

      % explanations
      \foreach \hght in {5, 5.5, 4.5, 4, 2} {\draw[dashed] (4,\hght) -- ++(5,0);}

      \foreach \hght/\text in {
        {5+.75/Unique (SHA1) identifier},
        {5+.25/Changes Summary},
        {4.5+.25/Commiter \& Author},
        {4+.25/Date \& Time},
        {4-.25/{Per-file additions/deletions}},
        {2-.25/{Mode changes \& file additions/deletions}},
      }{
        \node (tmp) at (6.5,\hght) {\scriptsize{\text}};
      }
    \end{tikzpicture}

    All the needed information is here!
  \end{center}
\end{frame}

\begin{frame}{Versioning: the badass way} % {{{
  Collaboration-centric workflow

  \begin{center}
    \begin{tikzpicture}
      \foreach \step/\stepcount/\corrb/\corra [count=\i] in {Pull/1/0/0, Code/2/0/10, Commit/3/10/0, Send/4/0/0, Review//0/0} {
        \node (tmp) at (-36+\i*72+90:2) {\step};
        \node[KTHBlue] (tmp) at (\i*72+90:2.5) {\large{\textbf{\stepcount}} };
        \draw[->, very thick] (-25+\i*72+90+\corrb:2) arc (-25+\i*72+90+\corrb:25+\i*72+90-\corra:2);
      }

      \node[cloud, thick, cloud puffs=14.7, cloud ignores aspect, minimum width=4cm, minimum height=2cm, align=center, draw] (cloud) at (6,2) {Server};
      \draw[thick] (4,-3) rectangle ++(4,2);
      \node (tmp) at (6,-3.3) {Local Machine};

      \draw[KTHBlue, ->, very thick] (5,1.5) .. controls ++(-.7,-.7) and ++(-.7,.7) ..  (5,-1.5) node[midway, left] {\large{\textbf{1}} };
      \draw[KTHBlue, <-, very thick] (7,1.5) .. controls ++(.7,-.7) and ++(.7,.7) ..
      (7,-1.5) node[midway, right] {\large{\textbf{4}} };

      \node[anchor=west] (tmp) at (4.2,-2) {\texttt{\$ vim file.m} \textcolor{KTHBlue}{\large{\textbf{2}} }};
      \node[anchor=west] (tmp) at (4.2,-2.5) {\texttt{\$ git commit} \textcolor{KTHBlue}{\large{\textbf{3}} }};

    \end{tikzpicture}
  \end{center}
\end{frame}

\begin{frame}{Versioning: the badass way} % {{{3

  \begin{center}
    \begin{tikzpicture}[scale=1.2, transform shape]

      % dots
      \foreach \x/\y in {
        0/0, 1/0, 2/0, 3/0, 4/0, 5/0, 6/0, 7/0,
        3/1, 4/1, 5/1,	6/1,
        3/-1, 4/-1 } {
        \fill[black](\x,\y) circle (.1);
      }

      % straight arrows
      \foreach \x/\y in {
        0/0, 1/0, 2/0, 3/0, 4/0, 5/0, 6/0,
        3/1, 4/1, 5/1,
        3/-1 } {
        \draw[->, thick] (\x+.2,\y) -- (\x+.8,\y);
      }

      % branching
      \draw[->, thick] (2.2,0) .. controls ++(.5,0) and ++(-.5,0) .. (2.8,1);
      \draw[->, thick] (6.2,1) .. controls ++(.5,0) and ++(-.5,0) .. (6.8,0);
      \draw[->, thick] (2.2,0) .. controls ++(.5,0) and ++(-.5,0) .. (2.8,-1);

      % interaction
      %% tags
      \uncover<2>{
        \draw[thick, KTHBlue](.7,-.3) rectangle ++(.6,.6);
        \node[KTHBlue, rotate=45,anchor=west] (tags) at (.9,.4) {\textbf{\scriptsize{Best version ever!}} };
      }
      \uncover<3>{
        \draw[KTHBlue, thick] (2.3,.5) rectangle (6.7,1.5);
        \node[KTHBlue] (merged_branch) at (4.55,1.6) {\textbf{\scriptsize{Idea integrated into mainline}} };
      }
      \uncover<4>{
        \draw[KTHBlue, thick] (2.3,-.5) rectangle (4.7,-1.5);
        \node[KTHBlue] (canceled_branch) at (3.55,-1.6) {\textbf{\scriptsize{Abandoned Idea}} };
      }
      \uncover<5>{
        \draw[KTHBlue, dashed, thick, ->] (6.8,-.2) .. controls ++(-.5,-.5) and ++(.5,-.5) ..
        (4.2,-.2) node[midway, below] {\textbf{\scriptsize{Hassle-free time-travel}} };
      }
      \uncover<6>{
        \draw[KTHBlue, dashed, thick, ->] (6.8,-.2) .. controls ++(-.5,-.5) and ++(.5,-.5) .. (4.2,-.2);
        \fill[KTHBlue](5,-1) circle (.1);
        \fill[KTHBlue](6,-1) circle (.1);

        \draw[KTHBlue, ->, thick] (5+.2,-1) -- ++(.6,0);
        \draw[KTHBlue, ->, thick] (4.2,0) .. controls ++(.5,0) and ++(-.5,0) .. (4.8,-1);

        \node[KTHBlue] (branching) at (5.5,-1.3) {\textbf{\scriptsize{Spawn branches from any point in time!}} };
      }
    \end{tikzpicture}
  \end{center}
\end{frame}

% }}}

% }}}
\section{Documentation is not a myth} % {{{1

\begin{frame}{WTFM} % {{{
  \begin{center}
    \begin{tikzpicture}
      \node (tmp) at (0,0) {\Large{Write The Fucking Manual}};
      \uncover<2,3>{
        \node[rotate=20, red] (tmp) at (.2,0) {\Huge{\textbf{Full}} };
      }
    \end{tikzpicture}
  \end{center}

  \uncover<3>{
    Reasons ? Really ?

    \begin{itemize}
    \item Be able to reuse the code later (even after years)
    \item Be able to share without a full training for the receiver
    \item Allow reviewing \& understanding the code
    \item Publish the code
    \end{itemize}
  }
\end{frame}

\begin{frame}{Documentation : right in the code} % {{{
  Nobody has \textbf{time} to write documentation...

  but everybody can include comments in the code !

  \pause
  \medskip

  \begin{block}{Different comments for different things}
    \begin{description}
    \item[File] What it does ? Bib. references ?
    \item[Function] How is the task done ? How to use it ?
    \item[Lines] Why is this operation done this way ?
    \end{description}
  \end{block}

  \pause
  \medskip

  \begin{block}{Pro-tip}
    \begin{center}
      Start every single code file with a comment
    \end{center}
  \end{block}

\end{frame}

\begin{frame}{Documentation : Variables naming matters} % {{{

  \begin{quotation}
    \noindent A computer program is just another way to express an idea.
  \end{quotation}

  ... and you have plenty of space to do so !

  \pause
  \medskip

  Choose clear \& meaningful names for variables and functions  (avoid \texttt{tmp}, \texttt{data}, \texttt{this},
  \texttt{process\_data()}, \texttt{a-z} (except in loops) , \texttt{id}, \textit{etc.})

  \pause
  \medskip

  \begin{block}{Conventions}
    Formalized naming conventions exists (and some also address code styling issues, see
    PEP8 for example).

    Use them as much as you can
  \end{block}

\end{frame}

\begin{frame}{Documentation: re-generated}

  \begin{quotation}
    When a task is repetitive... build a machine to do it.
  \end{quotation}

  Documenting is boring but it's always the same !

  Tools exist to automate doc generation:

  \begin{description}
  \item[Doxygen] Doc-generator for C/C++/Java \& others
  \item[Sphinx] Doc-oriented static site generator build for the Python project (docutils) with EPUB, PDF, \LaTeX{} capabilities
  \item[publish()] HTML/PDF publishing tool included in MATLAB
  \item[\textit{etc.}]
  \end{description}

  It's easy to publish it too : see \textbf{readthedocs.org}
\end{frame}

\section{What's next?} % {{{1

\begin{frame}{Cut scenes}
  We couldn't fit it all in... so here is the rest:

  \begin{description}
  \item[Github] Public Git server for free software (paid plans exist)
    with webpage publishing service (good to host the homepage of a project).
  \item[Agility] Project management methods centered on human relations more than on
    tools and processes. See Kanban or Scrum for an introduction.
  \item[TDD/BDD] Test- \& Behaviour-Driven Development. Coding paradigms focusing
    on certain aspects (reliability \& spec. compliance). Useful to scale from a
    research PoC to a distributed software.
  \end{description}
\end{frame}


\begin{frame}[standout] % Thank you {{{1
  Thank you !\\
  \vspace{0.05\textwidth}
  Questions ?\\
  \vspace{0.25\textwidth}
  \scriptsize{\texttt{manzari@kth.se}} --- \scriptsize{\texttt{gaborit@kth.se}}\\
\end{frame}

% }}}
\end{document}
